# SPDX-License-Identifier: BSD-3-Clause

[package]
name = "empty"
version = "0.3.0"
authors = [
    "Christopher Patton <cpatton@cloudflare.com>",
    "Armando Faz Hernandez <armfazh@cloudflare.com>",
]
edition = "2021"
license = "BSD-3-Clause"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]
test_e2e = []

[dependencies]
cfg-if = "1.0.0"
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.7", optional = true }
base64 = "0.21.0"
futures = "0.3.28"
hex = { version = "0.4.3", features = ["serde"] }
paste = "1.0.12"
rand = "0.8.5"
ring = "0.16.20"
async-trait = "0.1.68"
chrono = { version = "0.4.24", default-features = false, features = ["clock", "wasmbind"] }
getrandom = { version = "0.2.9", features = ["js"] } # Required for prio
matchit = "0.7.0"
prio = { version = "0.12.0", features = ["prio2"] }
prometheus = "0.13.3"
reqwest-wasm = { version = "0.11.16", features = ["json"] }
serde = { version = "1.0.160", features = ["derive"] }
thiserror = "1.0.40"
tracing = "0.1.37"
tracing-core = "0.1.30"
tracing-subscriber = {version = "0.3.16", features = ["env-filter"]}
url = { version = "2.3.1", features = ["serde"] }
serde_json = "1.0.95"
serde-wasm-bindgen = "0.5.0"
worker = "0.0.16"
once_cell = "1.17.1"
assert_matches = "1.5.0"
hpke-rs = { version = "0.1.0" , features = ["hazmat", "serialization"] }
hpke-rs-crypto = { version = "0.1.1" }
hpke-rs-rust-crypto = { version = "0.1.1"}
lazy_static = "1.4.0"
